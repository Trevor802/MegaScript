//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Calculator.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class CalculatorLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, Number=3, True=4, False=5, Var=6, Not=7, And=8, Or=9, 
		Dot=10, Plus=11, Minus=12, Multiply=13, Divide=14, Modulo=15, LeftParenthesis=16, 
		RightParenthesis=17, Greater=18, Less=19, GreaterEqual=20, LessEqual=21, 
		Equal=22, NotEqual=23, Id=24, WhiteSpaces=25;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "Digit", "Letter", "Number", "True", "False", "Var", "Not", 
		"And", "Or", "Dot", "Plus", "Minus", "Multiply", "Divide", "Modulo", "LeftParenthesis", 
		"RightParenthesis", "Greater", "Less", "GreaterEqual", "LessEqual", "Equal", 
		"NotEqual", "Id", "WhiteSpaces"
	};


	public CalculatorLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CalculatorLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'='", "';'", null, "'true'", "'false'", "'var'", "'!'", "'&&'", 
		"'||'", "'.'", "'+'", "'-'", "'*'", "'/'", "'%'", "'('", "')'", "'>'", 
		"'<'", "'>='", "'<='", "'=='", "'!='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, "Number", "True", "False", "Var", "Not", "And", "Or", 
		"Dot", "Plus", "Minus", "Multiply", "Divide", "Modulo", "LeftParenthesis", 
		"RightParenthesis", "Greater", "Less", "GreaterEqual", "LessEqual", "Equal", 
		"NotEqual", "Id", "WhiteSpaces"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Calculator.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static CalculatorLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x1B', '\x99', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x6', '\x6', '\x6', '\x43', '\n', '\x6', 
		'\r', '\x6', '\xE', '\x6', '\x44', '\x3', '\x6', '\x3', '\x6', '\a', '\x6', 
		'I', '\n', '\x6', '\f', '\x6', '\xE', '\x6', 'L', '\v', '\x6', '\x5', 
		'\x6', 'N', '\n', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', 
		'\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\v', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', 
		'\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', '\x3', 
		'\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x3', 
		'\x19', '\x3', '\x19', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1A', '\x3', 
		'\x1B', '\x3', '\x1B', '\x5', '\x1B', '\x89', '\n', '\x1B', '\x3', '\x1B', 
		'\x3', '\x1B', '\x3', '\x1B', '\a', '\x1B', '\x8E', '\n', '\x1B', '\f', 
		'\x1B', '\xE', '\x1B', '\x91', '\v', '\x1B', '\x3', '\x1C', '\x6', '\x1C', 
		'\x94', '\n', '\x1C', '\r', '\x1C', '\xE', '\x1C', '\x95', '\x3', '\x1C', 
		'\x3', '\x1C', '\x2', '\x2', '\x1D', '\x3', '\x3', '\x5', '\x4', '\a', 
		'\x2', '\t', '\x2', '\v', '\x5', '\r', '\x6', '\xF', '\a', '\x11', '\b', 
		'\x13', '\t', '\x15', '\n', '\x17', '\v', '\x19', '\f', '\x1B', '\r', 
		'\x1D', '\xE', '\x1F', '\xF', '!', '\x10', '#', '\x11', '%', '\x12', '\'', 
		'\x13', ')', '\x14', '+', '\x15', '-', '\x16', '/', '\x17', '\x31', '\x18', 
		'\x33', '\x19', '\x35', '\x1A', '\x37', '\x1B', '\x3', '\x2', '\x5', '\x3', 
		'\x2', '\x32', ';', '\x4', '\x2', '\x43', '\\', '\x63', '|', '\x5', '\x2', 
		'\v', '\f', '\xF', '\xF', '\"', '\"', '\x2', '\x9E', '\x2', '\x3', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', '\x2', '\x2', '\x31', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x33', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x35', '\x3', '\x2', '\x2', '\x2', '\x2', '\x37', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x39', '\x3', '\x2', '\x2', '\x2', '\x5', ';', '\x3', '\x2', 
		'\x2', '\x2', '\a', '=', '\x3', '\x2', '\x2', '\x2', '\t', '?', '\x3', 
		'\x2', '\x2', '\x2', '\v', '\x42', '\x3', '\x2', '\x2', '\x2', '\r', 'O', 
		'\x3', '\x2', '\x2', '\x2', '\xF', 'T', '\x3', '\x2', '\x2', '\x2', '\x11', 
		'Z', '\x3', '\x2', '\x2', '\x2', '\x13', '^', '\x3', '\x2', '\x2', '\x2', 
		'\x15', '`', '\x3', '\x2', '\x2', '\x2', '\x17', '\x63', '\x3', '\x2', 
		'\x2', '\x2', '\x19', '\x66', '\x3', '\x2', '\x2', '\x2', '\x1B', 'h', 
		'\x3', '\x2', '\x2', '\x2', '\x1D', 'j', '\x3', '\x2', '\x2', '\x2', '\x1F', 
		'l', '\x3', '\x2', '\x2', '\x2', '!', 'n', '\x3', '\x2', '\x2', '\x2', 
		'#', 'p', '\x3', '\x2', '\x2', '\x2', '%', 'r', '\x3', '\x2', '\x2', '\x2', 
		'\'', 't', '\x3', '\x2', '\x2', '\x2', ')', 'v', '\x3', '\x2', '\x2', 
		'\x2', '+', 'x', '\x3', '\x2', '\x2', '\x2', '-', 'z', '\x3', '\x2', '\x2', 
		'\x2', '/', '}', '\x3', '\x2', '\x2', '\x2', '\x31', '\x80', '\x3', '\x2', 
		'\x2', '\x2', '\x33', '\x83', '\x3', '\x2', '\x2', '\x2', '\x35', '\x88', 
		'\x3', '\x2', '\x2', '\x2', '\x37', '\x93', '\x3', '\x2', '\x2', '\x2', 
		'\x39', ':', '\a', '?', '\x2', '\x2', ':', '\x4', '\x3', '\x2', '\x2', 
		'\x2', ';', '<', '\a', '=', '\x2', '\x2', '<', '\x6', '\x3', '\x2', '\x2', 
		'\x2', '=', '>', '\t', '\x2', '\x2', '\x2', '>', '\b', '\x3', '\x2', '\x2', 
		'\x2', '?', '@', '\t', '\x3', '\x2', '\x2', '@', '\n', '\x3', '\x2', '\x2', 
		'\x2', '\x41', '\x43', '\x5', '\a', '\x4', '\x2', '\x42', '\x41', '\x3', 
		'\x2', '\x2', '\x2', '\x43', '\x44', '\x3', '\x2', '\x2', '\x2', '\x44', 
		'\x42', '\x3', '\x2', '\x2', '\x2', '\x44', '\x45', '\x3', '\x2', '\x2', 
		'\x2', '\x45', 'M', '\x3', '\x2', '\x2', '\x2', '\x46', 'J', '\a', '\x30', 
		'\x2', '\x2', 'G', 'I', '\x5', '\a', '\x4', '\x2', 'H', 'G', '\x3', '\x2', 
		'\x2', '\x2', 'I', 'L', '\x3', '\x2', '\x2', '\x2', 'J', 'H', '\x3', '\x2', 
		'\x2', '\x2', 'J', 'K', '\x3', '\x2', '\x2', '\x2', 'K', 'N', '\x3', '\x2', 
		'\x2', '\x2', 'L', 'J', '\x3', '\x2', '\x2', '\x2', 'M', '\x46', '\x3', 
		'\x2', '\x2', '\x2', 'M', 'N', '\x3', '\x2', '\x2', '\x2', 'N', '\f', 
		'\x3', '\x2', '\x2', '\x2', 'O', 'P', '\a', 'v', '\x2', '\x2', 'P', 'Q', 
		'\a', 't', '\x2', '\x2', 'Q', 'R', '\a', 'w', '\x2', '\x2', 'R', 'S', 
		'\a', 'g', '\x2', '\x2', 'S', '\xE', '\x3', '\x2', '\x2', '\x2', 'T', 
		'U', '\a', 'h', '\x2', '\x2', 'U', 'V', '\a', '\x63', '\x2', '\x2', 'V', 
		'W', '\a', 'n', '\x2', '\x2', 'W', 'X', '\a', 'u', '\x2', '\x2', 'X', 
		'Y', '\a', 'g', '\x2', '\x2', 'Y', '\x10', '\x3', '\x2', '\x2', '\x2', 
		'Z', '[', '\a', 'x', '\x2', '\x2', '[', '\\', '\a', '\x63', '\x2', '\x2', 
		'\\', ']', '\a', 't', '\x2', '\x2', ']', '\x12', '\x3', '\x2', '\x2', 
		'\x2', '^', '_', '\a', '#', '\x2', '\x2', '_', '\x14', '\x3', '\x2', '\x2', 
		'\x2', '`', '\x61', '\a', '(', '\x2', '\x2', '\x61', '\x62', '\a', '(', 
		'\x2', '\x2', '\x62', '\x16', '\x3', '\x2', '\x2', '\x2', '\x63', '\x64', 
		'\a', '~', '\x2', '\x2', '\x64', '\x65', '\a', '~', '\x2', '\x2', '\x65', 
		'\x18', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', '\a', '\x30', '\x2', 
		'\x2', 'g', '\x1A', '\x3', '\x2', '\x2', '\x2', 'h', 'i', '\a', '-', '\x2', 
		'\x2', 'i', '\x1C', '\x3', '\x2', '\x2', '\x2', 'j', 'k', '\a', '/', '\x2', 
		'\x2', 'k', '\x1E', '\x3', '\x2', '\x2', '\x2', 'l', 'm', '\a', ',', '\x2', 
		'\x2', 'm', ' ', '\x3', '\x2', '\x2', '\x2', 'n', 'o', '\a', '\x31', '\x2', 
		'\x2', 'o', '\"', '\x3', '\x2', '\x2', '\x2', 'p', 'q', '\a', '\'', '\x2', 
		'\x2', 'q', '$', '\x3', '\x2', '\x2', '\x2', 'r', 's', '\a', '*', '\x2', 
		'\x2', 's', '&', '\x3', '\x2', '\x2', '\x2', 't', 'u', '\a', '+', '\x2', 
		'\x2', 'u', '(', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\a', '@', '\x2', 
		'\x2', 'w', '*', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\a', '>', '\x2', 
		'\x2', 'y', ',', '\x3', '\x2', '\x2', '\x2', 'z', '{', '\a', '@', '\x2', 
		'\x2', '{', '|', '\a', '?', '\x2', '\x2', '|', '.', '\x3', '\x2', '\x2', 
		'\x2', '}', '~', '\a', '>', '\x2', '\x2', '~', '\x7F', '\a', '?', '\x2', 
		'\x2', '\x7F', '\x30', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', '\a', 
		'?', '\x2', '\x2', '\x81', '\x82', '\a', '?', '\x2', '\x2', '\x82', '\x32', 
		'\x3', '\x2', '\x2', '\x2', '\x83', '\x84', '\a', '#', '\x2', '\x2', '\x84', 
		'\x85', '\a', '?', '\x2', '\x2', '\x85', '\x34', '\x3', '\x2', '\x2', 
		'\x2', '\x86', '\x89', '\x5', '\t', '\x5', '\x2', '\x87', '\x89', '\a', 
		'\x61', '\x2', '\x2', '\x88', '\x86', '\x3', '\x2', '\x2', '\x2', '\x88', 
		'\x87', '\x3', '\x2', '\x2', '\x2', '\x89', '\x8F', '\x3', '\x2', '\x2', 
		'\x2', '\x8A', '\x8E', '\x5', '\t', '\x5', '\x2', '\x8B', '\x8E', '\a', 
		'\x61', '\x2', '\x2', '\x8C', '\x8E', '\x5', '\a', '\x4', '\x2', '\x8D', 
		'\x8A', '\x3', '\x2', '\x2', '\x2', '\x8D', '\x8B', '\x3', '\x2', '\x2', 
		'\x2', '\x8D', '\x8C', '\x3', '\x2', '\x2', '\x2', '\x8E', '\x91', '\x3', 
		'\x2', '\x2', '\x2', '\x8F', '\x8D', '\x3', '\x2', '\x2', '\x2', '\x8F', 
		'\x90', '\x3', '\x2', '\x2', '\x2', '\x90', '\x36', '\x3', '\x2', '\x2', 
		'\x2', '\x91', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x92', '\x94', '\t', 
		'\x4', '\x2', '\x2', '\x93', '\x92', '\x3', '\x2', '\x2', '\x2', '\x94', 
		'\x95', '\x3', '\x2', '\x2', '\x2', '\x95', '\x93', '\x3', '\x2', '\x2', 
		'\x2', '\x95', '\x96', '\x3', '\x2', '\x2', '\x2', '\x96', '\x97', '\x3', 
		'\x2', '\x2', '\x2', '\x97', '\x98', '\b', '\x1C', '\x2', '\x2', '\x98', 
		'\x38', '\x3', '\x2', '\x2', '\x2', '\n', '\x2', '\x44', 'J', 'M', '\x88', 
		'\x8D', '\x8F', '\x95', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
