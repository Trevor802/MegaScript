//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Calculator.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class CalculatorLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, Number=8, True=9, 
		False=10, Var=11, Not=12, And=13, Or=14, Dot=15, Plus=16, Minus=17, Multiply=18, 
		Divide=19, Modulo=20, LeftParenthesis=21, RightParenthesis=22, Greater=23, 
		Less=24, GreaterEqual=25, LessEqual=26, Equal=27, NotEqual=28, Id=29, 
		WhiteSpaces=30;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "Digit", "Letter", 
		"Number", "True", "False", "Var", "Not", "And", "Or", "Dot", "Plus", "Minus", 
		"Multiply", "Divide", "Modulo", "LeftParenthesis", "RightParenthesis", 
		"Greater", "Less", "GreaterEqual", "LessEqual", "Equal", "NotEqual", "Id", 
		"WhiteSpaces"
	};


	public CalculatorLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CalculatorLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'{'", "'}'", "'='", "';'", "'if'", "'else if'", "'else'", null, 
		"'true'", "'false'", "'var'", "'!'", "'&&'", "'||'", "'.'", "'+'", "'-'", 
		"'*'", "'/'", "'%'", "'('", "')'", "'>'", "'<'", "'>='", "'<='", "'=='", 
		"'!='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, "Number", "True", "False", 
		"Var", "Not", "And", "Or", "Dot", "Plus", "Minus", "Multiply", "Divide", 
		"Modulo", "LeftParenthesis", "RightParenthesis", "Greater", "Less", "GreaterEqual", 
		"LessEqual", "Equal", "NotEqual", "Id", "WhiteSpaces"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Calculator.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static CalculatorLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', ' ', '\xB7', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x4', '!', '\t', '!', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', 
		'\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', 
		'\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x6', 
		'\v', '\x61', '\n', '\v', '\r', '\v', '\xE', '\v', '\x62', '\x3', '\v', 
		'\x3', '\v', '\a', '\v', 'g', '\n', '\v', '\f', '\v', '\xE', '\v', 'j', 
		'\v', '\v', '\x5', '\v', 'l', '\n', '\v', '\x3', '\f', '\x3', '\f', '\x3', 
		'\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\r', 
		'\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x12', '\x3', '\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', 
		'\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x3', 
		'\x19', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', 
		'\x1C', '\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1D', '\x3', '\x1D', '\x3', 
		'\x1D', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', '\x3', 
		'\x1F', '\x3', '\x1F', '\x3', ' ', '\x3', ' ', '\x5', ' ', '\xA7', '\n', 
		' ', '\x3', ' ', '\x3', ' ', '\x3', ' ', '\a', ' ', '\xAC', '\n', ' ', 
		'\f', ' ', '\xE', ' ', '\xAF', '\v', ' ', '\x3', '!', '\x6', '!', '\xB2', 
		'\n', '!', '\r', '!', '\xE', '!', '\xB3', '\x3', '!', '\x3', '!', '\x2', 
		'\x2', '\"', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', 
		'\a', '\r', '\b', '\xF', '\t', '\x11', '\x2', '\x13', '\x2', '\x15', '\n', 
		'\x17', '\v', '\x19', '\f', '\x1B', '\r', '\x1D', '\xE', '\x1F', '\xF', 
		'!', '\x10', '#', '\x11', '%', '\x12', '\'', '\x13', ')', '\x14', '+', 
		'\x15', '-', '\x16', '/', '\x17', '\x31', '\x18', '\x33', '\x19', '\x35', 
		'\x1A', '\x37', '\x1B', '\x39', '\x1C', ';', '\x1D', '=', '\x1E', '?', 
		'\x1F', '\x41', ' ', '\x3', '\x2', '\x5', '\x3', '\x2', '\x32', ';', '\x4', 
		'\x2', '\x43', '\\', '\x63', '|', '\x5', '\x2', '\v', '\f', '\xF', '\xF', 
		'\"', '\"', '\x2', '\xBC', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', 
		')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', '\x2', '\x33', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x35', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x37', '\x3', '\x2', '\x2', '\x2', '\x2', '\x39', '\x3', '\x2', '\x2', 
		'\x2', '\x2', ';', '\x3', '\x2', '\x2', '\x2', '\x2', '=', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '?', '\x3', '\x2', '\x2', '\x2', '\x2', '\x41', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\x43', '\x3', '\x2', '\x2', '\x2', '\x5', 
		'\x45', '\x3', '\x2', '\x2', '\x2', '\a', 'G', '\x3', '\x2', '\x2', '\x2', 
		'\t', 'I', '\x3', '\x2', '\x2', '\x2', '\v', 'K', '\x3', '\x2', '\x2', 
		'\x2', '\r', 'N', '\x3', '\x2', '\x2', '\x2', '\xF', 'V', '\x3', '\x2', 
		'\x2', '\x2', '\x11', '[', '\x3', '\x2', '\x2', '\x2', '\x13', ']', '\x3', 
		'\x2', '\x2', '\x2', '\x15', '`', '\x3', '\x2', '\x2', '\x2', '\x17', 
		'm', '\x3', '\x2', '\x2', '\x2', '\x19', 'r', '\x3', '\x2', '\x2', '\x2', 
		'\x1B', 'x', '\x3', '\x2', '\x2', '\x2', '\x1D', '|', '\x3', '\x2', '\x2', 
		'\x2', '\x1F', '~', '\x3', '\x2', '\x2', '\x2', '!', '\x81', '\x3', '\x2', 
		'\x2', '\x2', '#', '\x84', '\x3', '\x2', '\x2', '\x2', '%', '\x86', '\x3', 
		'\x2', '\x2', '\x2', '\'', '\x88', '\x3', '\x2', '\x2', '\x2', ')', '\x8A', 
		'\x3', '\x2', '\x2', '\x2', '+', '\x8C', '\x3', '\x2', '\x2', '\x2', '-', 
		'\x8E', '\x3', '\x2', '\x2', '\x2', '/', '\x90', '\x3', '\x2', '\x2', 
		'\x2', '\x31', '\x92', '\x3', '\x2', '\x2', '\x2', '\x33', '\x94', '\x3', 
		'\x2', '\x2', '\x2', '\x35', '\x96', '\x3', '\x2', '\x2', '\x2', '\x37', 
		'\x98', '\x3', '\x2', '\x2', '\x2', '\x39', '\x9B', '\x3', '\x2', '\x2', 
		'\x2', ';', '\x9E', '\x3', '\x2', '\x2', '\x2', '=', '\xA1', '\x3', '\x2', 
		'\x2', '\x2', '?', '\xA6', '\x3', '\x2', '\x2', '\x2', '\x41', '\xB1', 
		'\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\a', '}', '\x2', '\x2', '\x44', 
		'\x4', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\a', '\x7F', '\x2', 
		'\x2', '\x46', '\x6', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\a', '?', 
		'\x2', '\x2', 'H', '\b', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\a', '=', 
		'\x2', '\x2', 'J', '\n', '\x3', '\x2', '\x2', '\x2', 'K', 'L', '\a', 'k', 
		'\x2', '\x2', 'L', 'M', '\a', 'h', '\x2', '\x2', 'M', '\f', '\x3', '\x2', 
		'\x2', '\x2', 'N', 'O', '\a', 'g', '\x2', '\x2', 'O', 'P', '\a', 'n', 
		'\x2', '\x2', 'P', 'Q', '\a', 'u', '\x2', '\x2', 'Q', 'R', '\a', 'g', 
		'\x2', '\x2', 'R', 'S', '\a', '\"', '\x2', '\x2', 'S', 'T', '\a', 'k', 
		'\x2', '\x2', 'T', 'U', '\a', 'h', '\x2', '\x2', 'U', '\xE', '\x3', '\x2', 
		'\x2', '\x2', 'V', 'W', '\a', 'g', '\x2', '\x2', 'W', 'X', '\a', 'n', 
		'\x2', '\x2', 'X', 'Y', '\a', 'u', '\x2', '\x2', 'Y', 'Z', '\a', 'g', 
		'\x2', '\x2', 'Z', '\x10', '\x3', '\x2', '\x2', '\x2', '[', '\\', '\t', 
		'\x2', '\x2', '\x2', '\\', '\x12', '\x3', '\x2', '\x2', '\x2', ']', '^', 
		'\t', '\x3', '\x2', '\x2', '^', '\x14', '\x3', '\x2', '\x2', '\x2', '_', 
		'\x61', '\x5', '\x11', '\t', '\x2', '`', '_', '\x3', '\x2', '\x2', '\x2', 
		'\x61', '\x62', '\x3', '\x2', '\x2', '\x2', '\x62', '`', '\x3', '\x2', 
		'\x2', '\x2', '\x62', '\x63', '\x3', '\x2', '\x2', '\x2', '\x63', 'k', 
		'\x3', '\x2', '\x2', '\x2', '\x64', 'h', '\a', '\x30', '\x2', '\x2', '\x65', 
		'g', '\x5', '\x11', '\t', '\x2', '\x66', '\x65', '\x3', '\x2', '\x2', 
		'\x2', 'g', 'j', '\x3', '\x2', '\x2', '\x2', 'h', '\x66', '\x3', '\x2', 
		'\x2', '\x2', 'h', 'i', '\x3', '\x2', '\x2', '\x2', 'i', 'l', '\x3', '\x2', 
		'\x2', '\x2', 'j', 'h', '\x3', '\x2', '\x2', '\x2', 'k', '\x64', '\x3', 
		'\x2', '\x2', '\x2', 'k', 'l', '\x3', '\x2', '\x2', '\x2', 'l', '\x16', 
		'\x3', '\x2', '\x2', '\x2', 'm', 'n', '\a', 'v', '\x2', '\x2', 'n', 'o', 
		'\a', 't', '\x2', '\x2', 'o', 'p', '\a', 'w', '\x2', '\x2', 'p', 'q', 
		'\a', 'g', '\x2', '\x2', 'q', '\x18', '\x3', '\x2', '\x2', '\x2', 'r', 
		's', '\a', 'h', '\x2', '\x2', 's', 't', '\a', '\x63', '\x2', '\x2', 't', 
		'u', '\a', 'n', '\x2', '\x2', 'u', 'v', '\a', 'u', '\x2', '\x2', 'v', 
		'w', '\a', 'g', '\x2', '\x2', 'w', '\x1A', '\x3', '\x2', '\x2', '\x2', 
		'x', 'y', '\a', 'x', '\x2', '\x2', 'y', 'z', '\a', '\x63', '\x2', '\x2', 
		'z', '{', '\a', 't', '\x2', '\x2', '{', '\x1C', '\x3', '\x2', '\x2', '\x2', 
		'|', '}', '\a', '#', '\x2', '\x2', '}', '\x1E', '\x3', '\x2', '\x2', '\x2', 
		'~', '\x7F', '\a', '(', '\x2', '\x2', '\x7F', '\x80', '\a', '(', '\x2', 
		'\x2', '\x80', ' ', '\x3', '\x2', '\x2', '\x2', '\x81', '\x82', '\a', 
		'~', '\x2', '\x2', '\x82', '\x83', '\a', '~', '\x2', '\x2', '\x83', '\"', 
		'\x3', '\x2', '\x2', '\x2', '\x84', '\x85', '\a', '\x30', '\x2', '\x2', 
		'\x85', '$', '\x3', '\x2', '\x2', '\x2', '\x86', '\x87', '\a', '-', '\x2', 
		'\x2', '\x87', '&', '\x3', '\x2', '\x2', '\x2', '\x88', '\x89', '\a', 
		'/', '\x2', '\x2', '\x89', '(', '\x3', '\x2', '\x2', '\x2', '\x8A', '\x8B', 
		'\a', ',', '\x2', '\x2', '\x8B', '*', '\x3', '\x2', '\x2', '\x2', '\x8C', 
		'\x8D', '\a', '\x31', '\x2', '\x2', '\x8D', ',', '\x3', '\x2', '\x2', 
		'\x2', '\x8E', '\x8F', '\a', '\'', '\x2', '\x2', '\x8F', '.', '\x3', '\x2', 
		'\x2', '\x2', '\x90', '\x91', '\a', '*', '\x2', '\x2', '\x91', '\x30', 
		'\x3', '\x2', '\x2', '\x2', '\x92', '\x93', '\a', '+', '\x2', '\x2', '\x93', 
		'\x32', '\x3', '\x2', '\x2', '\x2', '\x94', '\x95', '\a', '@', '\x2', 
		'\x2', '\x95', '\x34', '\x3', '\x2', '\x2', '\x2', '\x96', '\x97', '\a', 
		'>', '\x2', '\x2', '\x97', '\x36', '\x3', '\x2', '\x2', '\x2', '\x98', 
		'\x99', '\a', '@', '\x2', '\x2', '\x99', '\x9A', '\a', '?', '\x2', '\x2', 
		'\x9A', '\x38', '\x3', '\x2', '\x2', '\x2', '\x9B', '\x9C', '\a', '>', 
		'\x2', '\x2', '\x9C', '\x9D', '\a', '?', '\x2', '\x2', '\x9D', ':', '\x3', 
		'\x2', '\x2', '\x2', '\x9E', '\x9F', '\a', '?', '\x2', '\x2', '\x9F', 
		'\xA0', '\a', '?', '\x2', '\x2', '\xA0', '<', '\x3', '\x2', '\x2', '\x2', 
		'\xA1', '\xA2', '\a', '#', '\x2', '\x2', '\xA2', '\xA3', '\a', '?', '\x2', 
		'\x2', '\xA3', '>', '\x3', '\x2', '\x2', '\x2', '\xA4', '\xA7', '\x5', 
		'\x13', '\n', '\x2', '\xA5', '\xA7', '\a', '\x61', '\x2', '\x2', '\xA6', 
		'\xA4', '\x3', '\x2', '\x2', '\x2', '\xA6', '\xA5', '\x3', '\x2', '\x2', 
		'\x2', '\xA7', '\xAD', '\x3', '\x2', '\x2', '\x2', '\xA8', '\xAC', '\x5', 
		'\x13', '\n', '\x2', '\xA9', '\xAC', '\a', '\x61', '\x2', '\x2', '\xAA', 
		'\xAC', '\x5', '\x11', '\t', '\x2', '\xAB', '\xA8', '\x3', '\x2', '\x2', 
		'\x2', '\xAB', '\xA9', '\x3', '\x2', '\x2', '\x2', '\xAB', '\xAA', '\x3', 
		'\x2', '\x2', '\x2', '\xAC', '\xAF', '\x3', '\x2', '\x2', '\x2', '\xAD', 
		'\xAB', '\x3', '\x2', '\x2', '\x2', '\xAD', '\xAE', '\x3', '\x2', '\x2', 
		'\x2', '\xAE', '@', '\x3', '\x2', '\x2', '\x2', '\xAF', '\xAD', '\x3', 
		'\x2', '\x2', '\x2', '\xB0', '\xB2', '\t', '\x4', '\x2', '\x2', '\xB1', 
		'\xB0', '\x3', '\x2', '\x2', '\x2', '\xB2', '\xB3', '\x3', '\x2', '\x2', 
		'\x2', '\xB3', '\xB1', '\x3', '\x2', '\x2', '\x2', '\xB3', '\xB4', '\x3', 
		'\x2', '\x2', '\x2', '\xB4', '\xB5', '\x3', '\x2', '\x2', '\x2', '\xB5', 
		'\xB6', '\b', '!', '\x2', '\x2', '\xB6', '\x42', '\x3', '\x2', '\x2', 
		'\x2', '\n', '\x2', '\x62', 'h', 'k', '\xA6', '\xAB', '\xAD', '\xB3', 
		'\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
